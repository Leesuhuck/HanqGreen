용어 모음집 (개발자는 원하는 목적지로 갈수 있느냐, 덩어리에서 내가 원하는걸 하나를 뽑아낼수있느냐)
1. 클래스 필드 : 변수앞에 static이 있으면 클래스 필드다.
2. 클래스 메소드 : 메소드 앞에 static 이 있으면 클래스 메소드다.
3. 인스턴스 필드 (필드) : 변수앞에 static이 없으면 인스턴스 필드다.
4. 인스턴스 메소드 : 메소드 앞에 static 이 없으면 인스턴스 메소드라고한다.
- 자바(해석기) : 우리가 짠 프로그램을 제일먼저 읽어드릴때 static이 붙어있는 애들을 메소드 영역이라는 곳에다가 다 올려놓는다. 메소드 영역에는 static이 있는 애들이 다 올라간다.
static이 붙어있지 않는 애들은 메소드 영역에 올라가지 않는것이다.
static이 붙어있는 애들이 붙어있는 메소드안에서 static이 붙어있지 않는 필드를 사용할라고 했는데 사용이 안된다. 오류가 난다.
메소드 영역에 static이 붙어있는 애들을 올려놓는 이유가 무엇일까? 자바가? 메소드영역이라는 것도 결국에는 메모리 안이다.
왜 메모리에다가 뭔가를 넣을까? 사용할라고.
메모리안에 없다 라는것은 무엇일까? 이세상에 없다라는뜻이다.
자바는 static 이 붙어있는 그게 필드건 메소드건 다 메소드영역에 다 넣어버린다.
static이 안붙어있는애들은 메소드영역에 없다.
static이 붙어있는 애들은 메모리안에 있고, static이 없는 애들은 메모리안에 없다.
메모리 안에 없는 애들은 당연히 사용할수 없다.
자바는 메소드 단위로 메모리에 넣을수는 없다. 클래스 단위로 메모리에 넣는다.
	/**
	* <pre>
	* 이것이
	* 블록
	* 주석입니다
	* </pre>
----------------------------------------------------------------------------------------------------
메소드 : 기능을 정의하는곳, 한개의 기능을 정의하는곳
메소드명 : 여는 소괄호 바로 앞에있는 글자가 함수명이다.
{} : 메소드일시에만 블록이라 불림
지역변수 : 메소드 안에서 선언된 변수, 메소드 구형부 안에 선언된 변수
	특징 : 내가 선언된 메소드 밖에서는 사용될수 없다.
객체 : 객체란 메모리안에 있는 모든것을 객체라고 합니다.
인스턴스 : 메모리안에 들어가있는 클래스를 인스턴스라 한다.
인터페이스 : 인터페이스에 적는 모든 필드는 pubulic static (final)입니다
인터페이스에 적는 모든 메소드는 추상메서드입니다.
콘크리트 클래스 : sbstract 안붙어있는거
추상 클래스 : sbstract 붙어있는거 (실무에서 안씀)
메서드 : 한개의 기능을 정의하는곳
http : 프로토콜
s : 보안
<%@ : 디렉티브
page : 디렉티브 명
example : 업무폴더
@ : 어노테이션
* : 아스트리크

자바스크립트 :
{ : 함수스코프
leftClkFn() : 함수정의문 [leftClickFunction]
onclick : 인라인 이벤트 모델중 하나임
	ㄴ > 이안에 있는 자바스크립트를 실행시켜라
alert : 경고문
자바스크립트는 변수타입이 없다.
location.href = 논리적 주소로 이동하기위함

클라이언트에서 값으로 전달할때는?
"?pageName =" + value
(key,value)=쿼리스트링
해당 컨트롤러 RequestMapping 매개변수에 HttpServletRequest Hservlet
syso(Hservlet.getParameter("pageName"));

값을 여러개 보낼때는?
"?pageName =" + value + "&Twopage = " + Twovalue

톰켓9 버전은 UTF8이 처리된다
하지만 그 전 버전은 한글 버전을 따로 처리해야된다.

자바까지 받아온거를 화면에 내리는 방법
해당 컨트롤러 RequestMapping 매개변수에 Model model 입력
model.addAttribute(key,value)
model.addAttribute("pageName", Hservlet.getParameter("pageName"));

el태그는 자바다. ${}
${pageName}
${param.pageName} -> param = getParameter

1.model : 화면에서 올린 데이터를 어떠한 가공하면서 바로 다음화면에 출력해줄꺼면 사용
2.param : 화면에서 올린 데이터를 어떠한 가공없이 바로 다음화면에 출력해줄꺼면 사용

